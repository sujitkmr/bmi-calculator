// bmi.js - BMI Calculator + PDF Report + Tracker + Diet
document.addEventListener("DOMContentLoaded", () => {
  const bmiForm = document.getElementById("bmi-form");
  if (!bmiForm) return;

  const resultContainer = document.getElementById("result-container");
  const resultBadge = document.getElementById("result-badge");
  const resultText = document.getElementById("result-text");
  const progressBar = document.getElementById("progress-bar");

  const downloadButtons = document.getElementById("download-buttons");
  const downloadReport = document.getElementById("download-report");
  const downloadTracker = document.getElementById("download-tracker");
  const downloadDiet = document.getElementById("download-diet");

  const tips = {
    "Underweight": {
      color: "#f39c12",
      list: ["Eat calorie-dense foods", "Add healthy snacks", "Increase protein intake"]
    },
    "Normal weight": {
      color: "#2ecc71",
      list: ["Maintain balanced diet", "Stay active daily", "Keep hydrated"]
    },
    "Overweight": {
      color: "#f97316",
      list: ["Increase fruits & veggies", "Add daily walks", "Cut down sugary drinks"]
    },
    "Obesity": {
      color: "#e74c3c",
      list: ["Consult a nutritionist", "Do regular physical activity", "Monitor blood pressure"]
    }
  };

  let lastBMI = null;
  let lastCategory = null;
  let lastGender = null;
  let lastAge = null;
  let lastDOB = null;

  // ✅ Calculate age from DOB
  function calculateAge(dobValue) {
    const dob = new Date(dobValue);
    if (isNaN(dob)) return null;

    const today = new Date();
    let age = today.getFullYear() - dob.getFullYear();
    const m = today.getMonth() - dob.getMonth();
    if (m < 0 || (m === 0 && today.getDate() < dob.getDate())) {
      age--;
    }
    return age;
  }

  // ✅ BMI calculation
  bmiForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const height = parseFloat(document.getElementById("height").value);
    const weight = parseFloat(document.getElementById("weight").value);

    // gender selection
    const genderInput = document.querySelector('input[name="gender"]:checked');
    lastGender = genderInput ? genderInput.value : "Not specified";

    // DOB & age calculation
    lastDOB = document.getElementById("dob")?.value || "N/A";
    lastAge = calculateAge(lastDOB);

    if (height > 0 && weight > 0) {
      const h = height / 100;
      const bmi = +(weight / (h * h)).toFixed(1);

      let category = "";
      if (bmi < 18.5) category = "Underweight";
      else if (bmi < 25) category = "Normal weight";
      else if (bmi < 30) category = "Overweight";
      else category = "Obesity";

      lastBMI = bmi;
      lastCategory = category;

      // ✅ UI update with friendly message
      resultContainer.style.display = "block";
      resultBadge.textContent = category;
      resultBadge.style.background = tips[category].color;

      resultText.innerHTML = `
        Hey there! Based on your height, weight, and age (<strong>${lastAge ?? "N/A"}</strong>), 
        your Body Mass Index (BMI) is <strong>${bmi}</strong>, 
        which falls under the "<strong>${category}</strong>" category.
      `;
      resultText.style.color = tips[category].color;

      progressBar.style.width = Math.min((bmi / 40) * 100, 100) + "%";
      progressBar.style.background = tips[category].color;

      if (downloadButtons) downloadButtons.style.display = "block";
    }
  });

  // ✅ Helper: Header & Footer
  function addHeaderFooter(doc, title) {
    doc.setFont("helvetica", "bold");
    doc.setFontSize(14);
    doc.text("GYM‖BMI", 20, 15);

    doc.setFont("helvetica", "normal");
    doc.setFontSize(12);
    doc.text(title, 105, 15, { align: "center" });

    const now = new Date().toLocaleString();
    doc.setFontSize(10);
    doc.text(`Generated: ${now}`, 200, 15, { align: "right" });

    doc.setDrawColor(150);
    doc.line(20, 20, 190, 20);

    // Footer
    doc.setFontSize(9);
    doc.setTextColor(100);
    doc.text("Confidential | Generated by BMI Calculator – GYM‖BMI", 105, 285, {
      align: "center"
    });
    doc.setTextColor(0);
  }

  // ✅ Report Generator
  if (downloadReport) {
    downloadReport.addEventListener("click", () => {
      if (!lastBMI || !lastCategory)
        return alert("Please calculate BMI first!");

      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();

      addHeaderFooter(doc, "BMI & Body Composition Report");

      // User details (dynamic)
      const name = "User"; // optional future field
      const age = lastAge ?? "N/A";
      const gender = lastGender ?? "N/A";
      const dob = lastDOB ?? "N/A";
      const height = document.getElementById("height").value;
      const weight = document.getElementById("weight").value;

      // Panels
      doc.setFontSize(12);
      doc.text(`Name: ${name}`, 20, 30);
      doc.text(`DOB: ${dob}`, 20, 37);
      doc.text(`Age: ${age}`, 20, 44);
      doc.text(`Gender: ${gender}`, 20, 51);

      doc.text(`Height: ${height} cm`, 120, 30);
      doc.text(`Weight: ${weight} kg`, 120, 37);
      doc.setTextColor(tips[lastCategory].color);
      doc.text(`BMI: ${lastBMI} (${lastCategory})`, 120, 44);
      doc.setTextColor(0);

      let y = 65;

      // Section 1: Body Composition
      doc.setFont("helvetica", "bold");
      doc.text("1. Body Composition", 20, y);
      doc.setFont("helvetica", "normal");
      y += 10;
      doc.text(`Body Fat Mass: ${(weight * 0.25).toFixed(1)} kg`, 25, y);
      y += 8;
      doc.text(`Percent Body Fat: ${(lastBMI / 30 * 25).toFixed(1)} %`, 25, y);
      y += 8;
      doc.text(`Skeletal Muscle Mass: ${(weight * 0.35).toFixed(1)} kg`, 25, y);
      y += 8;
      doc.text(`Fat Free Mass: ${(weight * 0.75).toFixed(1)} kg`, 25, y);

      // Section 2: Obesity Analysis
      y += 12;
      doc.setFont("helvetica", "bold");
      doc.text("2. Obesity Analysis", 20, y);
      doc.setFont("helvetica", "normal");
      y += 10;
      doc.text(`BMI: ${lastBMI} (${lastCategory})`, 25, y);
      y += 8;
      doc.text(`PBF: ${(lastBMI / 30 * 25).toFixed(1)} %`, 25, y);
      y += 8;
      doc.text(`Visceral Fat Level: ${Math.round(lastBMI / 2)}`, 25, y);

      // Section 3: Muscle-Fat Analysis
      y += 12;
      doc.setFont("helvetica", "bold");
      doc.text("3. Muscle-Fat Analysis", 20, y);
      doc.setFont("helvetica", "normal");
      y += 10;
      doc.text(`Weight: ${weight} kg`, 25, y);
      y += 8;
      doc.text(`Skeletal Muscle Mass: ${(weight * 0.35).toFixed(1)} kg`, 25, y);
      y += 8;
      doc.text(`Body Fat Mass: ${(weight * 0.25).toFixed(1)} kg`, 25, y);

      // Section 4: Segmental Analysis
      y += 12;
      doc.setFont("helvetica", "bold");
      doc.text("4. Segmental Analysis", 20, y);
      doc.setFont("helvetica", "normal");
      y += 10;
      ["Right Arm", "Left Arm", "Right Leg", "Left Leg", "Trunk"].forEach((part) => {
        doc.text(
          `${part}: Lean ${(weight * 0.08).toFixed(1)} kg | Fat ${(weight * 0.05).toFixed(1)} kg`,
          25,
          y
        );
        y += 8;
      });

      // Section 5: Weight Control
      y += 12;
      doc.setFont("helvetica", "bold");
      doc.text("5. Weight Control", 20, y);
      doc.setFont("helvetica", "normal");
      y += 10;
      doc.text(`Target Weight: ${(22 * (height / 100) ** 2).toFixed(1)} kg`, 25, y);
      y += 8;
      doc.text(`Weight to Lose: ${(weight - 22 * (height / 100) ** 2).toFixed(1)} kg`, 25, y);

      // Section 6: Evaluation
      y += 12;
      doc.setFont("helvetica", "bold");
      doc.text("6. Comprehensive Evaluation", 20, y);
      doc.setFont("helvetica", "normal");
      y += 10;
      tips[lastCategory].list.forEach((t, i) => {
        doc.text(`- ${t}`, 25, y + i * 8);
      });

      doc.save("BMI_Report.pdf");
    });
  }

  // ✅ Health Tracker (Excel for 30 days)
  if (downloadTracker) {
    downloadTracker.addEventListener("click", () => {
      if (!lastBMI) return alert("Please calculate BMI first!");

      const height = parseFloat(document.getElementById("height").value);
      const weight = parseFloat(document.getElementById("weight").value);

      const ws_data = [["Date", "Weight (kg)", "BMI", "Gender", "DOB", "Age", "Notes"]];
      const today = new Date();

      for (let i = 0; i < 30; i++) {
        const date = new Date(today);
        date.setDate(today.getDate() + i);
        const dateStr = date.toISOString().split("T")[0];

        const bmi = +(weight / ((height / 100) * (height / 100))).toFixed(1);
        ws_data.push([
          dateStr,
          weight,
          bmi,
          lastGender ?? "N/A",
          lastDOB ?? "N/A",
          lastAge ?? "N/A",
          ""
        ]);
      }

      const ws = XLSX.utils.aoa_to_sheet(ws_data);
      const wb = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(wb, ws, "BMI Tracker");
      XLSX.writeFile(wb, "BMI_Health_Tracker.xlsx");
    });
  }

  // ✅ Diet Plan (Simple PDF)
  if (downloadDiet) {
    downloadDiet.addEventListener("click", () => {
      if (!lastCategory) return alert("Please calculate BMI first!");

      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();

      addHeaderFooter(doc, "Personalized Diet Plan");

      doc.setFontSize(12);
      doc.text(`Category: ${lastCategory}`, 20, 30);

      let y = 50;
      doc.setFont("helvetica", "bold");
      doc.text("Recommended Diet Tips:", 20, y);
      y += 10;
      doc.setFont("helvetica", "normal");

      tips[lastCategory].list.forEach((t, i) => {
        doc.text(`- ${t}`, 25, y + i * 8);
      });

      doc.save("Diet_Plan.pdf");
    });
  }
});
