// dashboard.js - BMI Advanced Report UI
document.addEventListener("DOMContentLoaded", () => {
  const latestData = JSON.parse(localStorage.getItem("latestBMIData"));

  if (latestData) {
    // ==============================
    // BASIC INFO - HEADER
    // ==============================
    document.getElementById("user-name").textContent = latestData.name;
    document.getElementById("user-age").textContent = latestData.age;
    document.getElementById("user-gender").textContent = latestData.gender;
    document.getElementById("generated-date").textContent = latestData.currentDate;
    // Example
document.getElementById('pbf').textContent = latestData.pbf;
document.getElementById('waistHipRatio').textContent = latestData.waistHipRatio;
document.getElementById('visceralFatLevel').textContent = latestData.visceralFatLevel;
document.getElementById('fatToReduce').textContent = latestData.fatToReduce;
document.getElementById('bmr').textContent = latestData.bmr;
document.getElementById('tdee').textContent = latestData.tdee;
document.getElementById('obesityDegree').textContent = latestData.obesityDegree;


    const footerInfo = document.getElementById("footer-info");
    footerInfo.textContent = `Confidential | Generated by GymBMI • Data sample: ${latestData.name}`;

    // ==============================
    // BMI & TARGET CALCULATIONS
    // ==============================
    const bmi = latestData.bmi;
    const bmiStatus = latestData.category;

    const heightM = latestData.height / 100;
    const targetWeight = (22 * heightM * heightM).toFixed(1); // Ideal BMI = 22
    const weightDiff = (targetWeight - latestData.weight).toFixed(1);

    // Body composition score
    let score = Math.max(50, 100 - Math.abs(22 - bmi) * 2);
    score = Math.min(100, Math.round(score));

    // ==============================
    // UPDATE UI - BMI CARD
    // ==============================
    const bmiStatusEl = document.getElementById("bmi-status");
    document.getElementById("bmi-value").textContent = bmi;
    bmiStatusEl.textContent = bmiStatus;

    // Color coding for BMI category
    if (bmiStatus === "Normal weight") {
      bmiStatusEl.style.color = "#10b981";
    } else if (bmiStatus === "Underweight") {
      bmiStatusEl.style.color = "#f59e0b";
    } else if (bmiStatus === "Overweight") {
      bmiStatusEl.style.color = "#f97316";
    } else if (bmiStatus === "Obesity") {
      bmiStatusEl.style.color = "#ef4444";
    }

    document.getElementById("bmi-insight").textContent =
      `Your BMI is classified as ${bmiStatus}. Target: ${weightDiff > 0 ? "+" : ""}${weightDiff} kg to reach ${targetWeight} kg.`;

    // ==============================
    // BODY SCORE CARD
    // ==============================
    document.getElementById("body-score").textContent = score;
    document.getElementById("body-status").textContent =
      score > 85 ? "Excellent" : score > 70 ? "Good" : "Needs Improvement";

    // ==============================
    // WEIGHT CARD
    // ==============================
    document.getElementById("weight-value").textContent = latestData.weight + " kg";
    document.getElementById("weight-target").textContent = targetWeight + " kg";
    document.getElementById("weight-diff").textContent =
      (weightDiff > 0 ? "+" : "") + weightDiff + " kg";

    // Progress bar update
    let progress = (latestData.weight / targetWeight) * 100;
    progress = Math.min(100, Math.max(0, progress));
    document.getElementById("progress-bar").style.width = progress + "%";

    // ==============================
    // ADVANCED BODY COMPOSITION
    // ==============================
    const totalWeight = latestData.weight;

    // Simple assumptions for body composition
    const bodyFatMass = +(totalWeight * 0.17).toFixed(1);    // 17% fat
    const skeletalMuscle = +(totalWeight * 0.55).toFixed(1); // 55% muscle
    const water = +(totalWeight * 0.6).toFixed(1);           // 60% water
    const protein = +(totalWeight * 0.16).toFixed(1);        // 16% protein
    const minerals = +(totalWeight * 0.04).toFixed(1);       // 4% minerals

    // Update DOM for composition details
    document.getElementById("total-weight").textContent = totalWeight;
    document.getElementById("skeletal-muscle").textContent = skeletalMuscle;
    document.getElementById("body-fat-mass").textContent = bodyFatMass;

    document.getElementById("tbw").textContent = water;
    document.getElementById("protein").textContent = protein;
    document.getElementById("minerals").textContent = minerals;
    document.getElementById("body-fat").textContent = bodyFatMass;

    // ==============================
    // CHART 1: BODY COMPOSITION
    // ==============================
    const ctx1 = document.getElementById("bodyCompositionChart").getContext("2d");
    new Chart(ctx1, {
      type: "doughnut",
      data: {
        labels: ["Water", "Protein", "Minerals", "Body Fat"],
        datasets: [{
          data: [water, protein, minerals, bodyFatMass],
          backgroundColor: ["#3b82f6", "#10b981", "#fbbf24", "#ef4444"],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: { position: "bottom" },
        }
      }
    });

    // ==============================
    // CHART 2: MUSCLE VS FAT
    // ==============================
    const ctx2 = document.getElementById("muscleFatChart").getContext("2d");
    new Chart(ctx2, {
      type: "bar",
      data: {
        labels: ["Skeletal Muscle", "Body Fat"],
        datasets: [{
          label: "Weight (kg)",
          data: [skeletalMuscle, bodyFatMass],
          backgroundColor: ["#4f46e5", "#ef4444"]
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
    // ==============================
// OBESITY ANALYSIS & GOALS (NEW CARDS)
// ==============================

// In your localStorage, store these keys or derive them from latestData
const pbf = latestData.pbf || '16.6%';  // % Body Fat
const waistHipRatio = latestData.waistHipRatio || '1.01';
const visceralFatLevel = latestData.visceralFatLevel || '8.5';
const bmiCategory = latestData.category || 'Normal';
const bmiValue = latestData.bmi || '21.2';

// You already computed targetWeight and weightDiff above
const fatToReduce = latestData.fatToReduce || '-1.3'; // you can compute if needed

// If you don’t have these in localStorage, just hardcode or compute them:
const bmr = latestData.bmr || '1589';
const tdee = latestData.tdee || '2224';
const obesityDegree = latestData.obesityDegree || '96.4';

// Update DOM
document.getElementById('pbf').textContent = pbf;
document.getElementById('waistHipRatio').textContent = waistHipRatio;
document.getElementById('visceralFatLevel').textContent = visceralFatLevel;
document.getElementById('bmiCategory').textContent = bmiCategory;
document.getElementById('bmiValue').textContent = bmiValue;
// ==============================
// COLOR CODING FOR PBF & WAIST-HIP RATIO
// ==============================
const pbfEl = document.getElementById('pbf');
pbfEl.style.color = parseFloat(pbf) <= 20 ? '#10b981' : '#ef4444';

const waistHipEl = document.getElementById('waistHipRatio');
waistHipEl.style.color = parseFloat(waistHipRatio) <= 0.9 ? '#10b981' : '#f97316';


document.getElementById('targetWeight').textContent = targetWeight;
document.getElementById('weightToReduce').textContent =
  (weightDiff > 0 ? "-" : "") + Math.abs(weightDiff);
document.getElementById('fatToReduce').textContent = fatToReduce;
document.getElementById('recommendationText').textContent =
  'Combine mild calorie surplus with lean-mass program to increase muscle safely.';

document.getElementById('bmr').textContent = bmr;
document.getElementById('tdee').textContent = tdee;
document.getElementById('obesityDegree').textContent = obesityDegree;


  } else {
    console.warn("⚠️ No BMI data found in localStorage! Please calculate BMI first.");
  }
});

// Easy BMI update with color
function updateBMI(bmi) {
  const bmiCard = document.querySelector('.card.bmi');
  const bmiValue = document.getElementById('bmi-value');
  const bmiStatus = document.getElementById('bmi-status');

  bmiValue.textContent = bmi.toFixed(1);

  if (bmi < 18.5) {
    bmiStatus.textContent = "Underweight";
    bmiValue.style.color = "#3498db"; 
    bmiCard.style.background = "#e0f0ff"; 
  } else if (bmi < 24.9) {
    bmiStatus.textContent = "Normal";
    bmiValue.style.color = "#2ecc71"; 
    bmiCard.style.background = "#e6f7e6"; 
  } else if (bmi < 29.9) {
    bmiStatus.textContent = "Overweight";
    bmiValue.style.color = "#f1c40f"; 
    bmiCard.style.background = "#fff8e1"; 
  } else {
    bmiStatus.textContent = "Obese";
    bmiValue.style.color = "#e74c3c"; 
    bmiCard.style.background = "#ffe6e6"; 
  }
}
